#pragma once

const unsigned short c_eNBNumber=7;
const unsigned short c_roadNumber = 14;
const unsigned short c_RSUNumber = 78;
const int c_wide=250;
const int c_length=433;
const float c_lane_wide=3.5;


//数值常量设置
const float c_PI = 3.1415926535897932384626433832795f;
const float c_PINeg = -3.1415926535897932384626433832795f;
const float c_PI2 = 6.283185307179586476925286766559f;
const float c_PIHalf = 1.5707963267948966192313216916398f;
const float c_Degree2PI = 0.01745329251994329576923690768489f;
const float c_SqrtHalf = 0.70710678118654752440084436210485f;
const float c_SqrtThree = 1.73205080756887729f;
const float c_C = 299792458.0f;

const float c_roadTopoRatio[c_roadNumber * 2] = 
{
  -1.5f, 1.0f,
  -0.5f, 1.0f,
   0.5f, 1.0f,
   1.5f, 1.0f,
  -2.5f, 0.0f,
  -1.5f, 0.0f,
  -0.5f, 0.0f,
   0.5f, 0.0f,
   1.5f, 0.0f,
   2.5f, 0.0f,
  -1.5f,-1.0f,
  -0.5f,-1.0f,
   0.5f,-1.0f,
   1.5f,-1.0f
};
const unsigned short c_WrapAroundRoad[c_roadNumber][9] =
{
	{0,1,6,5,4,13,8,9,10},
	{1,2,7,6,5,0,9,10,11},
	{2,3,8,7,6,1,10,11,12},
	{3,4,9,8,7,2,11,12,13},
	{4,5,10,9,8,3,12,13,0},
	{5,6,11,10,9,4,13,0,1},
	{6,7,12,11,10,5,0,1,2},
	{7,8,13,12,11,6,1,2,3},
	{8,9,0,13,12,7,2,3,4},
	{9,10,1,0,13,8,3,4,5},
	{10,11,2,1,0,9,4,5,6},
	{11,12,3,2,1,10,5,6,7},
	{12,13,4,3,2,11,6,7,8},
	{13,0,5,4,3,12,7,8,9}

};

const float c_RSUTopoRatio[c_RSUNumber * 2] = 
{
  -2.0f, 1.5f,
  -1.5f, 1.5f,
  -1.0f, 1.5f,
  -0.5f, 1.5f,
   0.0f, 1.5f,
   0.5f, 1.5f,
   1.0f, 1.5f,
   1.5f, 1.5f,
   2.0f, 1.5f,
  -2.0f, 1.2f,
  -1.0f, 1.2f,
   0.0f, 1.2f,
   1.0f, 1.2f,
   2.0f, 1.2f,
  -2.0f, 0.8f,
  -1.0f, 0.8f,
   0.0f, 0.8f,
   1.0f, 0.8f,
   2.0f, 0.8f,
  -3.0f, 0.5f,
  -2.5f, 0.5f,
  -2.0f, 0.5f,
  -1.5f, 0.5f,
  -1.0f, 0.5f,
  -0.5f, 0.5f, 
   0.0f, 0.5f,
   0.5f, 0.5f,
   1.0f, 0.5f,
   1.5f, 0.5f,
   2.0f, 0.5f,
   2.5f, 0.5f,
   3.0f, 0.5f,
  -3.0f, 0.2f,
  -2.0f, 0.2f,
  -1.0f, 0.2f,
   0.0f, 0.2f,
   1.0f, 0.2f,
   2.0f, 0.2f,
   3.0f, 0.2f,
  -3.0f,-0.2f,
  -2.0f,-0.2f,
  -1.0f,-0.2f,
   0.0f,-0.2f,
   1.0f,-0.2f,
   2.0f,-0.2f,
   3.0f,-0.2f,
  -3.0f,-0.5f,
  -2.5f,-0.5f,
  -2.0f,-0.5f,
  -1.5f,-0.5f,
  -1.0f,-0.5f,
  -0.5f,-0.5f, 
   0.0f,-0.5f,
   0.5f,-0.5f,
   1.0f,-0.5f,
   1.5f,-0.5f,
   2.0f,-0.5f,
   2.5f,-0.5f,
   3.0f,-0.5f,
  -2.0f,-0.8f,
  -1.0f,-0.8f,
   0.0f,-0.8f,
   1.0f,-0.8f,
   2.0f,-0.8f,
  -2.0f,-1.2f,
  -1.0f,-1.2f,
   0.0f,-1.2f,
   1.0f,-1.2f,
   2.0f,-1.2f,
  -2.0f,-1.5f,
  -1.5f,-1.5f,
  -1.0f,-1.5f,
  -0.5f,-1.5f,
   0.0f,-1.5f,
   0.5f,-1.5f,
   1.0f,-1.5f,
   1.5f,-1.5f,
   2.0f,-1.5f,
};

const unsigned short c_RSUInRoad[c_roadNumber][10] =
{
	{0,1,2,10,15,23,22,21,14,9},
	{2,3,4,11,16,25,24,23,15,10},
	{4,5,6,12,17,27,26,25,16,11},
	{6,7,8,13,18,29,28,27,17,12},
	{19,20,21,33,40,48,47,46,39,32},
	{21,22,23,34,41,50,49,48,40,33},
	{23,24,25,35,42,52,51,50,41,34},
	{25,26,27,36,43,54,53,52,42,35},
	{27,28,29,37,44,56,55,54,43,36},
	{29,30,31,38,45,58,57,56,44,37},
	{48,49,50,60,65,71,70,69,64,59},
	{50,51,52,61,66,73,72,71,65,60},
	{52,53,54,62,67,75,74,73,66,61},
	{54,55,56,67,68,77,76,75,67,62}
};
		//
//
const float c_FC = 2e9f;
//extern float c_FC;
////const float c_cellRadius = 500.0f / c_SqrtThree;

//extern float c_cellRadius;
//extern float c_heNetRadius;
//const float c_cellMinum = 35.0f;
//const float c_heNet_heNetMindist = 40.0f;
//const float c_cell_heNetMindist = 75.0f;
//const float c_heue_heNetMindist = 10.0f;
////μ?àíí???3￡á?éè??
///*const float c_cellNineteenCoordinateRatio[c_cellNumber * 2] =
//{
//	0.0f, 0.0f
//};*/
///*const float c_cellNineteenCoordinateRatio[c_cellNumber * 2] =
//{
//	0.0f, 0.0f,
//	1.5f, -0.86602540378443860f,
//	0.0f, -1.7320508075688772f,
//	-1.5f, -0.86602540378443860f,
//	-1.5f, 0.86602540378443860f,
//	0.0f, 1.7320508075688772f,
//	1.5f, 0.86602540378443860f
//};*/
//const float c_cellNineteenCoordinateRatio[c_cellNumber * 2] =
//{
//	0.0f, 0.0f,
//	1.5f, -0.86602540378443860f,
//	0.0f, -1.7320508075688772f,
//	-1.5f, -0.86602540378443860f,
//	-1.5f, 0.86602540378443860f,
//	0.0f, 1.7320508075688772f,
//	1.5f, 0.86602540378443860f,
//	3.0f, 0.0f,
//	3.0f, -1.7320508075688772f,
//	1.5f, -2.5980762113533160f,
//	0.0f, -3.4641016151377544f,
//	-1.5f, -2.5980762113533160f,
//	-3.0f, -1.7320508075688772f,
//	-3.0f, 0.0f,
//	-3.0f, 1.7320508075688772f,
//	-1.5f, 2.5980762113533160f,
//	0.0f, 3.4641016151377544f,
//	1.5f, 2.5980762113533160f,
//	3.0f, 1.7320508075688772f
//};
///*const unsigned short c_WrapAroundCell[c_cellNumber * c_cellNumber]=
//{
//	0
//};*/
///*const unsigned short c_WrapAroundCell[c_cellNumber * c_cellNumber]=
//{
//0,1,2,3,4,5,6,
//1,3,5,2,0,6,4,
//2,5,4,6,3,0,1,
//3,2,6,5,1,4,0,
//4,0,3,1,6,2,5,
//5,6,0,4,2,1,3,
//6,4,1,0,5,3,2
//};*/
//const unsigned short c_WrapAroundCell[c_cellNumber * c_cellNumber]=
//{
//	0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
//	1,  8,  9,  2,  0,  6,  7, 12, 16, 15 ,14, 10, 11,  3,  4,  5, 17, 18, 13,
//	2,  9, 10, 11,  3,  0,  1,  8, 15, 14, 18, 17, 16, 12, 13,  4,  5,  6,  7,
//	3,  2, 11, 12, 13,  4,  0,  1,  9, 10, 17, 16,  8,  7, 18, 14, 15,  5,  6,
//	4,  0,  3, 13, 14, 15,  5,  6,  1,  2, 11, 12,  7, 18, 10,  9,  8, 16, 17,
//	5,  6,  0,  4, 15, 16, 17, 18,  7,  1,  2,  3, 13, 14,  9,  8, 12, 11, 10,
//	6,  7,  1,  0,  5, 17, 18, 13, 12,  8,  9,  2,  3,  4, 15, 16, 11, 10, 14,
//	7, 12,  8,  1,  6, 18, 13,  3, 11, 16, 15,  9,  2,  0,  5, 17, 10, 14,  4,
//	8, 16, 15,  9,  1,  7, 12, 11, 17,  5,  4, 14, 10,  2,  0,  6, 18, 13,  3,
//	9, 15, 14, 10,  2,  1,  8, 16,  5,  4, 13, 18, 17, 11,  3,  0,  6,  7, 12,
//	10, 14, 18, 17, 11,  2,  9, 15,  4, 13,  7,  6,  5, 16, 12,  3,  0,  1,  8,
//	11, 10, 17, 16, 12,  3,  2,  9, 14, 18,  6,  5, 15,  8,  7, 13,  4,  0,  1,
//	12, 11, 16,  8,  7, 13,  3,  2, 10, 17,  5, 15,  9,  1,  6, 18, 14,  4,  0,
//	13,  3, 12,  7, 18, 14,  4,  0,  2, 11, 16,  8,  1,  6, 17, 10,  9, 15,  5,
//	14,  4, 13, 18, 10,  9, 15,  5,  0,  3, 12,  7,  6, 17, 11,  2,  1,  8, 16,
//	15,  5,  4, 14,  9,  8, 16, 17,  6,  0,  3, 13, 18, 10,  2,  1,  7, 12, 11,
//	16, 17,  5, 15,  8, 12, 11, 10, 18,  6,  0,  4, 14,  9,  1,  7, 13,  3,  2,
//	17, 18,  6,  5, 16, 11, 10, 14, 13,  7,  1,  0,  4, 15,  8, 12,  3,  2,  9,
//	18, 13,  7,  6, 17, 10, 14,  4,  3, 12,  8,  1,  0,  5, 16, 11,  2,  9, 15
//};
//
//const int freq_reuse_factor_1 = 1;
//const int freq_reuse_factor_3 = 3;
//const int freq_reuse_factor_9 = 9;
//
//										//0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18
//const int freq_reuse_map_1[c_cellNumber] = {0};
//const int freq_reuse_map_3[c_cellNumber] = {0};
////const int freq_reuse_map_9[c_cellNumber] = {0,1,2,1,2,1,2};
//const int freq_reuse_map_9[c_cellNumber] = {0,1,2,1,2,1,2,0,1,0,1,0,2,0,1,0,2,0,1};
//
////const int co_num_scenario1 = 1;
////const int co_num_scenario1 = 7;
//const int co_num_scenario1 = 19;
//
//const int co_secnum_scenario1 = 3;
//
///*const int co_secmap_scenario1[co_num_scenario1][co_secnum_scenario1]={
//	{0,1,2}
//};*/
///*const int co_secmap_scenario1[co_num_scenario1][co_secnum_scenario1]={
//	{0,1,2},
//	{3,4,5},
//	{6,7,8},
//	{9,10,11},
//	{12,13,14},
//	{15,16,17},
//	{18,19,20},
//
//};*/
//const int co_secmap_scenario1[co_num_scenario1][co_secnum_scenario1]={
//	{0,1,2},
//	{3,4,5},
//	{6,7,8},
//	{9,10,11},
//	{12,13,14},
//	{15,16,17},
//	{18,19,20},
//	{21,22,23},
//	{24,25,26},
//	{27,28,29},
//	{30,31,32},
//	{33,34,35},
//	{36,37,38},
//	{39,40,41},
//	{42,43,44},
//	{45,46,47},
//	{48,49,50},
//	{51,52,53},
//	{54,55,56},
//
//};
//
//const bool ABS_configure[10] ={0,1,0,1,0,1,0,1,0,1}; 
//
//
